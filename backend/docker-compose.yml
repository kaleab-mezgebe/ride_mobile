version: '3.8'

services:
  niyat-ride-backend:
    build: .
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      # Database configuration - using actual values from .env
      - DB_URL=jdbc:postgresql://localhost:5432/niyat_ride
      - DB_USERNAME=postgres
      - DB_PASSWORD=mnm

      # JWT configuration - using actual values from .env
      - JWT_SECRET=0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef
      - JWT_EXPIRATION=3600000

      # Afro Message API - using actual token from .env
      - AFROMESSAGE_API_TOKEN=eyJhbGciOiJIUzI1NiJ9.eyJpZGVudGlmaWVyIjoiWXgxbjRTUlg2MXdVbWN5WFRrVXdzdzhoWmd5RUtUcEIiLCJleHAiOjE5MTI5MjM1NzMsImlhdCI6MTc1NTE1NzE3MywianRpIjoiMTQwNTQ5OTQtZTdiMy00ZGI1LWExMWQtYTIyNWNjNWFmMjQ2In0.Pq9wVgzOBqUr3VKvOXPt3xljPvUDfBrw4uxbVnTYtNE

      # Admin seeding - using actual values from .env
      - NYAT_ADMIN_EMAIL=admin@niyat.com
      - NYAT_ADMIN_PASSWORD=Admin@123
      - NYAT_ADMIN_PHONE=+251900000000

      # Port
      - PORT=8080
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - niyat-network

  postgres:
    image: postgis/postgis:15-3.3-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=niyat_ride
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d niyat_ride"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - niyat-network

volumes:
  postgres_data:

networks:
  niyat-network:
    driver: bridge
